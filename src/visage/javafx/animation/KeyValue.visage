/*
 * Copyright (c) 2010-2012, Visage Project
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 * 3. Neither the name Visage nor the names of its contributors may be used
 *    to endorse or promote products derived from this software without
 *    specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
package visage.javafx.animation;

import javafx.animation.Interpolator;
import javafx.beans.value.WritableValue;

/**
 * <p>Defines a key value to be interpolated for a particular interval along the animation. A <code>KeyFrame</code>, which defines a specific point on a timeline, can hold multiple <code>KeyValue</code>s. <code>KeyValue</code> is an immutable class.</p>
 * <p>A <code>KeyValue</code> is defined by a target, which is an implementation of <code>WritableValue</code>, an end value and an <code>Interpolator</code>.</p>
 * <p>By default, <code>Interpolator.LINEAR</code> is used in the interval.</p>
 * @author Alain BÃ©arez <A@cua.li>
 */
public class KeyValue {
    package var wrappedKeyValue :javafx.animation.KeyValue;
    init {
        //wrappedKeyValue = new javafx.animation.KeyValue(target, endValue, interpolator);
    }
    public-init var target :WritableValue;
    public-init var endValue :Object;
    public-init var interpolator :Interpolator = Interpolator.LINEAR;
}
