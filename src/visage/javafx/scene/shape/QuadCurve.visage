/*
 * Copyright (c) 2010-2011, Visage Project
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 * 3. Neither the name Visage nor the names of its contributors may be used
 *    to endorse or promote products derived from this software without
 *    specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
package visage.javafx.scene.shape;

/**
* The Quadcurve class defines a quadratic Bézier parametric curve segment in (x,y) coordinate space. Drawing a curve that intersects both the specified coordinates (startX, startY) and (endX, enfY), using the specified point (controlX, controlY) as Bézier control point.
* @author William Antônio <william.a.siqueira@gmail.com>
**/
public class QuadCurve extends Shape{
    override def wrappedNode = javafx.scene.shape.QuadCurve {}
    public-read def wrappedQuadCurve = bind wrappedNode as javafx.scene.shape.QuadCurve;    
    
    /**
     * Defines the X coordinate of the control point of the quadratic curve segment.
     **/
    public var controlX:Double on replace{
        if (isInitialized(this) or controlX != 0){
            wrappedQuadCurve.setControlX(controlX);
        }
    }        
    /**
     * Defines the Y coordinate of the control point of the quadratic curve segment.
     **/
     public var controlY:Double on replace{
        if (isInitialized(this) or controlY != 0){
            wrappedQuadCurve.setControlY(controlY);
        }
    }
    
    /**
     * Defines the X coordinate of the end point of the quadratic curve segment.
     **/
    public var endX:Double on replace{
        if (isInitialized(this) or endX != 0){
            wrappedQuadCurve.setEndX(endX);
        }
    }    
    
    /**
     * Defines the Y coordinate of the end point of the quadratic curve segment.
     **/
     public var endY:Double on replace{
        if (isInitialized(this) or endY != 0){
            wrappedQuadCurve.setEndY(endY);
        }
    }
    
    /**
     * Defines the X coordinate of the start point of the quadratic curve segment.
    **/     
    public var startX:Double on replace{
        if (isInitialized(this) or startX != 0){
            wrappedQuadCurve.setStartX(startX);
        }
    }
    /**
     * Defines the Y coordinate of the start point of the quadratic curve segment.
    **/     
    public var startY:Double on replace{
        if (isInitialized(this) or startY != 0){
            wrappedQuadCurve.setStartY(startY);
        }
    }
}