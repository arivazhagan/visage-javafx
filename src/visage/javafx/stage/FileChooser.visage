/*
 * Copyright (c) 2010-2012, Visage Project
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 * 3. Neither the name Visage nor the names of its contributors may be used
 *    to endorse or promote products derived from this software without
 *    specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
package visage.javafx.stage;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

import visage.javafx.scene.Scene;

/**
 * @author Alain BÃ©arez <A@cua.li>
 */
public class FileChooser {
    public-read var wrappedFileChooser :javafx.stage.FileChooser = javafx.stage.FileChooser {};
    public default var extensionFilters :ExtensionFilter[] on replace oldSequence[lowIndex..highIndex] = newFilters {
        // if (isInitialized(this)) {
            if (lowIndex <= highIndex) { 
                wrappedFileChooser.getExtensionFilters().remove(lowIndex, highIndex+1);
            }
            if (0 < sizeof newFilters) {
                for (filter in reverse newFilters) {
                    def extensions = filter.extensions as nativearray of String;
                    def wrapped = new javafx.stage.FileChooser.ExtensionFilter(filter.description, extensions);
                    wrappedFileChooser.getExtensionFilters().add(lowIndex, wrapped)
                }
            }
        // }
    }
    public var title :String on replace oldValue {
        if ((isInitialized(this) and (oldValue != title)) or (null != title)) {
            wrappedFileChooser.setTitle(title);
        }
    }
    public var initialDirectory :File on replace oldValue {
        if ((isInitialized(this) and (oldValue != initialDirectory)) or (null != initialDirectory)) {
            wrappedFileChooser.setInitialDirectory(initialDirectory)
        }
    }
    /** Shows a new file open dialog. */
    public function showOpenDialog(ownerWindow :Window) :File {
        wrappedFileChooser.showOpenDialog(ownerWindow.wrappedWindow)
    }
    /** Shows a new file open dialog in which multiple files can be selected. */
    public function showOpenMultipleDialog(ownerWindow :Window) :List {
        wrappedFileChooser.showOpenMultipleDialog(ownerWindow.wrappedWindow)
    }
    /** Shows a new file save dialog. */
    public function showSaveDialog(ownerWindow :Window) :File {
        wrappedFileChooser.showSaveDialog(ownerWindow.wrappedWindow)
    }
}

public class ExtensionFilter {
    public default var description :String;
    public var extensions :String[];
}